/* 
 * Version 3. Integration with GLSL Sandbox
 */
var app = require('express').createServer();
var formidable = require('formidable');
var fs = require('fs');
var util = require('util'),
	spawn = require('child_process').spawn;

var path = require('path');

var io = require('socket.io').listen(app);

// app.configure(function(){
// 	// Sets the root directory
//     var dir =  __dirname + '/..';
//     console.log(dir);
//     app.set('views', dir);
//     app.set('view options', {layout: false});
//     app.set("view engine", "html");
//  });
//  
// app.get('/', function(req, res){
//   res.sendfile("canvasrender01.html");
// });
// 
// // we send the file, if it match the url
// app.get(/\/(.*)/, function(req, res){
//     res.sendfile(req.params[0]);
// });


app.get(/\/(.*)/, function(req, res){
    res.sendfile(req.params[0]);
});

app.post('*', function(req, res) {
	console.log('receive');
	
	console.log(req.body);
	res.end();
});

// Start the server listening on port 8000
app.listen(8000);

// 347 - 400 . 1675 files 1920x1080.  4 chromes, 2 windows, 2. Video en oding 402 404

//var project = new RenderProject({"duration":"67","fps":"25","frames":1675,"music":"music/Christmas.mp3","code":"// By @paulofalcao\n//\n// Merry Christmas! :)\n//\n//\n// Some GLSL compilers/drivers can't optimize the exit from the loop on break\n// and always run all iterations.\n//\n// Works very nice on my MacBook Pro with NVIDIA 320M on MacOSX 10.7 / Chrome\n// But runs very very slow on a Macbook Pro NVIDIA 320M on Win7 / Chrome\n\n// modified by @blurspline for slight audio reactive effects\n// and baking to video with renderflies\n// music by http://soundcloud.com/sxo/christmas\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform float audio;\nuniform vec2 mouse;\nuniform vec2 resolution;\n//Util Start\n\nfloat PI=3.14159265;\n\nvec2 ObjUnion(vec2 obj0,vec2 obj1){\n  if (obj0.x<obj1.x)\n    return obj0;\n  else\n    return obj1;\n}\n\nvec3 sim(vec3 p,float s){\n   vec3 ret=p;\n   ret=p+s/2.0;\n   ret=fract(ret/s)*s-s/2.0;\n   return ret;\n}\n\nvec2 rot(vec2 p,float r){\n   vec2 ret;\n   ret.x=p.x*cos(r)-p.y*sin(r);\n   ret.y=p.x*sin(r)+p.y*cos(r);\n   return ret;\n}\n\nvec2 rotsim(vec2 p,float s){\n   vec2 ret=p;\n   ret=rot(p,-PI/(s*2.0));\n   ret=rot(p,floor(atan(ret.x,ret.y)/PI*s)*(PI/s));\n   return ret;\n}\n\nfloat rnd(vec2 v){\n  return sin((sin(((v.y-1453.0)/(v.x+1229.0))*23232.124))*16283.223)*0.5+0.5; \n}\n\nfloat noise(vec2 v){\n  vec2 v1=floor(v);\n  vec2 v2=smoothstep(0.0,1.0,fract(v));\n  float n00=rnd(v1);\n  float n01=rnd(v1+vec2(0,1));\n  float n10=rnd(v1+vec2(1,0));\n  float n11=rnd(v1+vec2(1,1));\n  return mix(mix(n00,n01,v2.y),mix(n10,n11,v2.y),v2.x);\n}\n\n//Util End\n\n \n//Scene Start\n \n//Floor\nvec2 obj0(in vec3 p){\n  if (p.y<0.4)\n  p.y+=sin(p.x)*0.4*cos(p.z)*0.4;\n  return vec2(p.y,0);\n}\n\nvec3 obj0_c(vec3 p){\n  float f=\n    noise(p.xz)*0.5+\n    noise(p.xz*2.0+13.45)*0.25+\n    noise(p.xz*4.0+23.45)*0.15;\n  float pc=min(max(1.0/length(p.xz),0.0),1.0)*0.5;\n  return vec3(f)*0.3+pc+0.5;\n}\n\n//Snow\nfloat makeshowflake(vec3 p){\n  return length(p)-0.03;\n}\n\nfloat makeShow(vec3 p,float tx,float ty,float tz){\n  p.y=p.y+time*tx;\n  p.x=p.x+time*ty;\n  p.z=p.z+time*tz;\n  p=sim(p,4.0);\n  return makeshowflake(p);\n}\n\nvec2 obj1(vec3 p){\n  float f=makeShow(p,1.11, 1.03, 1.38);\n  f=min(f,makeShow(p,1.72, 0.74, 1.06));\n  f=min(f,makeShow(p,1.93, 0.75, 1.35));\n  f=min(f,makeShow(p,1.54, 0.94, 1.72));\n  f=min(f,makeShow(p,1.35, 1.33, 1.13));\n  f=min(f,makeShow(p,1.55, 0.23, 1.16));\n  f=min(f,makeShow(p,1.25, 0.41, 1.04));\n  f=min(f,makeShow(p,1.49, 0.29, 1.31));\n  f=min(f,makeShow(p,1.31, 1.31, 1.13));  \n  return vec2(f,1.0);\n}\n \nvec3 obj1_c(vec3 p){\n    return vec3(1,1,1);\n}\n\n\n//Star\nvec2 obj2(vec3 p){\n  p.y=p.y-4.3;\n  p=p*4.0;\n  float l=length(p);\n  if (l<2.0){\n  p.xy=rotsim(p.xy,2.5);\n  p.y=p.y-2.0; \n  p.z=abs(p.z);\n  p.x=abs(p.x);\n  return vec2(dot(p,normalize(vec3(2.0,1,3.0)))/4.0,2);\n  } else return vec2((l-1.9)/4.0,2.0);\n}\n\nvec3 obj2_c(vec3 p){\n  return vec3(1.0,0.5,0.2);\n}\n \n//Objects union\nvec2 inObj(vec3 p){\n  return ObjUnion(ObjUnion(obj0(p),obj1(p)),obj2(p));\n}\n \n//Scene End\n \nvoid main(void){\n  vec2 vPos=-1.0+2.0*gl_FragCoord.xy/resolution.xy;\n \n  //Camera animation\n  vec3 vuv=normalize(vec3(sin(time)*0.3,1,0));\n  vec3 vrp=vec3(0,cos(time*0.5)+2.5,0);\n  vec3 prp=vec3(sin(time*0.5)*(sin(time*0.39)*2.0+3.5),sin(time*0.5)+3.5,cos(time*0.5)*(cos(time*0.45)*2.0+3.5));\n  float vpd=1.5;  \n \n  //Camera setup\n  vec3 vpn=normalize(vrp-prp);\n  vec3 u=normalize(cross(vuv,vpn));\n  vec3 v=cross(vpn,u);\n  vec3 scrCoord=prp+vpn*vpd+vPos.x*u*resolution.x/resolution.y+vPos.y*v;\n  vec3 scp=normalize(scrCoord-prp);\n \n  //lights are 2d, no raymarching\n  mat4 cm=mat4(\n    u.x,   u.y,   u.z,   -dot(u,prp),\n    v.x,   v.y,   v.z,   -dot(v,prp),\n    vpn.x, vpn.y, vpn.z, -dot(vpn,prp),\n    0.0,   0.0,   0.0,   1.0);\n \n  vec4 pc=vec4(0,0,0,0);\n  const float maxl=80.0;\n  for(float i=0.0;i<maxl;i++){\n  vec4 pt=vec4(\n    sin(i*PI*2.0*7.0/maxl)*2.0*(1.0-i/maxl),\n    i/maxl*4.0,\n    cos(i*PI*2.0*7.0/maxl)*2.0*(1.0-i/maxl),\n    1.0);\n  pt=pt*cm;\n  vec2 xy=(pt/(-pt.z/vpd)).xy+vPos*vec2(resolution.x/resolution.y,1.0);\n  float c;\n  c=0.4/length(xy);\n  pc+=vec4(\n          (sin(i*5.0+time*10.0)*0.5+0.5)*c,\n          (cos(i*3.0+time*8.0)*0.5+0.5)*c,\n          (sin(i*6.0+time*9.0)*0.5+0.5)*c,0.0);\n  }\n  pc=pc/maxl;\n\n  pc=smoothstep(0.0,1.0,pc);\n  \n  //Raymarching\n  const vec3 e=vec3(0.1,0,0);\n  const float maxd=15.0; //Max depth\n \n  vec2 s=vec2(0.1,0.0);\n  vec3 c,p,n;\n \n  float f=1.0;\n  for(int i=0;i<64;i++){\n    if (abs(s.x)<.001||f>maxd) break;\n    f+=s.x;\n    p=prp+scp*f;\n    s=inObj(p);\n  }\n  \n  if (f<maxd){\n    if (s.y==0.0)\n      c=obj0_c(p);\n    else if (s.y==1.0)\n      c=obj1_c(p);\n    else\n      c=obj2_c(p);\n      if (s.y<=1.0){\n        gl_FragColor=vec4(c*max(1.0-f*.08,0.0),1.0)* audio+pc* audio;\n      } else{\n         //tetrahedron normal   \n         const float n_er=0.01;\n         float v1=inObj(vec3(p.x+n_er,p.y-n_er,p.z-n_er)).x;\n         float v2=inObj(vec3(p.x-n_er,p.y-n_er,p.z+n_er)).x;\n         float v3=inObj(vec3(p.x-n_er,p.y+n_er,p.z-n_er)).x;\n         float v4=inObj(vec3(p.x+n_er,p.y+n_er,p.z+n_er)).x;\n         n=normalize(vec3(v4+v1-v3-v2,v3+v4-v1-v2,v2+v4-v3-v1));\n  \n        float b=max(dot(n,normalize(prp-p)),0.0);\n        gl_FragColor=vec4((b*c+pow(b,8.0))*(1.0-f*.01),1.0)* audio+pc* audio;\n      }\n  }\n  else gl_FragColor=vec4(0,0,0,0) + pc * audio; //background color\n}","audiolevels":[0,0.14953841458762496,0.1894146226110884,0.18769482124814582,0.18597501988520324,0.18425521852226068,0.1825354171593181,0.1808156157963755,0.17909581443343292,0.17737601307049033,0.17565621170754778,0.1736175809722146,0.171425439798323,0.16115434500648507,0.1432822156099794,0.13424124513618677,0.12514120748085852,0.1076523994811932,0.0943284989977597,0.08491645685511559,0.07684824902723736,0.07224383916990922,0.06477454795147632,0.4771114671549554,0.5877775234607462,0.588693064774548,0.5593385214007782,0.522697795071336,0.5078376876042245,0.4602883955138476,0.40690956255158595,0.3509020162716662,0.29216231239577534,0.25716307039264236,0.22367982212340187,0.18832684824902726,0.17748211371909126,0.16766890696851788,0.15753496687348825,0.1510435090201627,0.13715953307392992,0.12514120748085855,0.1155870908674754,0.10376134889753567,0.1009449694274597,0.16451848249027345,0.4276618323310931,0.4682230869001296,0.4815469873835633,0.47058823529411775,0.4228656443121996,0.3961796957905906,0.3761348897535668,0.36026550698100246,0.32177809220610765,0.2937743190661475,0.257846952010376,0.24327990575804098,0.23328454646057195,0.2232891871631029,0.18093385214007804,0.16136415655756467,0.14307948860478042,0.132295719844358,0.11687563049430752,0.11284046692607004,0.10930314821365401,0.1571011673151751,0.5978484779125659,0.6566720073243304,0.6575875486381323,0.6049439230945299,0.5525291828793775,0.4827191577019915,0.4311535082214134,0.385671778439002,0.34087961325315386,0.29961089494163423,0.29593017141655265,0.26848249027237336,0.23284865861150925,0.2095608671484157,0.18265703168426906,0.17226742129465875,0.15778880987521804,0.15014877546349284,0.1383952045430645,0.13413884906819581,0.11963211885390873,0.11397240891404316,0.8573780305297815,0.8992816521999404,0.9221789883268483,0.9221789883268483,0.9143968871595333,0.8843802112284604,0.8495460440985735,0.789196612497139,0.7568841664172402,0.735932355582161,0.7324902723735404,0.8780398832684824,0.8988326848249028,0.8988326848249028,0.8830395971618218,0.8666742961776145,0.8116083009079118,0.7566796368352786,0.7183084169567889,0.693125810635538,0.6561726211531658,0.6512506948304615,0.836701393247148,0.9745504259122935,0.9727626459143969,0.9696498054474708,0.962005035477226,0.9500307188203975,0.9494163424124513,0.9431307991619275,0.9287022201876862,0.9075303273060198,0.8868162050812542,0.958967102935974,0.9767648693718732,0.980544747081712,0.9725337605859462,0.9450675211718929,0.9246551114255395,0.9108491645685509,0.8794855166450495,0.8531128404669259,0.8084405866507031,0.7649595120412237,0.9407186999313385,0.9844357976653697,0.9844357976653697,0.9844357976653697,0.9844357976653697,0.9844357976653697,0.9702865228157058,0.9649805447470817,0.9328793774319072,0.8832684824902728,0.824024099410067,0.9214715245843644,0.9579766536964981,0.954337376974136,0.9276059799303706,0.8864647026125624,0.8454697053918842,0.8058570550890846,0.7597848477912565,0.7343785763332569,0.6994163424124511,0.6740164288802419,0.7262730502453053,0.9077592126344701,0.9131739855475264,0.9125141207480858,0.9170990056204065,0.8900778210116723,0.8770192194316705,0.8523689631494626,0.8307392996108951,0.813355089745199,0.7806046093983842,0.8040423692174655,0.9873540856031129,0.986242356864925,0.9940489814602883,0.9996566720073243,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9928322752406308,0.9900247612309869,0.998514326140785,1,1,1,1,1,0.9976941922467215,0.9961089494163424,0.9892423895628294,0.9700012551776074,0.9537563603711465,0.9745069099691411,0.9941975561471773,0.9961089494163424,0.9921416037232014,0.9794835514679868,0.9739070725566491,0.9865581888928197,0.9883268482490273,0.9830888955402574,0.9771026638730919,0.9610894941634242,0.9730961645358537,0.9961089494163424,0.9961089494163424,0.9894712748912796,0.9911640726329443,0.9941634241245135,0.9961089494163424,0.9955530850472486,0.9930825767401643,0.9831167974675198,0.9699267954890195,0.9915104350902005,1,1,1,1,1,1,1,1,0.9991020652499252,0.9961089494163424,0.9855475264035577,0.9965953307392997,0.9922178988326849,0.9785402664780095,0.9757643135075038,0.9661964980544745,0.9905795617448285,1,1,1,0.9825492276854146,0.9766536964980544,0.964578022272911,0.9512594716362892,0.9304631605372171,0.8848249027237354,0.8623275557127701,0.8406110390546185,0.81011673151751,0.7577821011673139,0.7208683186565633,0.6908321387125395,0.6536964980544747,0.9572643935896593,0.9704543955681594,0.9649805447470817,0.9649805447470817,0.9494163424124513,0.9614230127848808,0.9825983571119756,0.9749094324433112,0.9660922734852697,0.9503555615188515,0.9587866274914632,0.9769649805447472,0.9805447470817126,0.9630802642294815,0.9474708171206225,0.9363813229571983,0.9390402075226976,0.973596442468038,0.967626459143969,0.9561608300907911,0.9511783275824096,0.9701686121919589,0.9972533760585944,1,1,1,0.9981625594466061,0.9961089494163424,0.9887846189059282,0.9844357976653697,0.9741775733993632,0.9500473235881792,0.9512474250400552,0.9939726863508043,0.9960224816255945,0.9925637699956767,0.9839780270084688,0.9775048638132298,0.9693162868260146,0.9916990920881974,0.9852847541563495,0.9881146091262824,0.9698260039644666,0.9580794361647457,1,1,1,1,1,1,1,1,1,0.9981689173723964,0.9987029831387809,1,1,0.9993265489374439,0.9963334331038611,0.9961089494163424,0.9961089494163424,0.9961089494163424,0.9966347670627826,0.9974760752970869,0.9983173835313913,0.9991586917656957,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9997446028574433,0.9994441356309061,0.9991436684043687,0.9988432011778315,0.9985427339512942,0.998242266724757,0.9979417994982197,0.9976413322716825,0.9973408650451452,0.997040397818608,0.9967399305920707,0.9964394633655335,0.9961389961389961,0.9954322449670107,0.9946803511344199,0.993928457301829,0.9931765634692382,0.9924246696366473,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9848935683222712,0.9844357976653697,0.9860165369649806,0.9883268482490273,0.9883268482490273,0.9853201273434736,0.9881926740909702,0.9844357976653697,0.9822308690012971,0.9836346990157931,0.9882124055848022,0.9844357976653697,0.9828336003662166,0.9866885111611717,0.9983324068927182,0.9963251188932122,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9969983324068926,0.9961089494163424,0.9952676411820381,0.9907419830940557,0.9883268482490273,0.9883268482490273,0.9926625903279598,0.9961089494163424,0.9941634241245136,0.9922178988326849,0.9953107851940535,0.9965412883700823,1,1,1,1,1,1,1,0.9961089494163424,0.9985034420832087,1,1,1,1,1,1,1,1,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9832566914278975,0.9785992217898832,0.9807216130173327,0.9819714656290535,0.9856738592147156,0.9964332036316476,1,1,1,1,0.9945761113076291,0.9959834316555791,0.9961089494163424,0.9932184546970536,0.9883268482490273,0.9821954958141731,0.9768760422456922,0.980544747081712,0.9794150872348436,0.974464980544747,0.975572849113705,0.9730058365758754,0.9868390936140997,0.9961089494163424,0.9961089494163424,0.9933122568093385,0.9922178988326849,0.9936770428015564,1,1,1,1,1,1,1,1,1,1,1,0.9963521400778209,1,1,1,1,0.9963137415523243,0.9996294237539373,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9938200961318383,0.9885491939966647,1,1,0.9985992217898834,0.996950257650647,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9963868816008894,0.9881903201583725,0.9854597583452795,0.9829132126543731,0.9743190661478599,0.9514339241965705,0.9456694048133744,0.9388375486381322,0.9455252918287943,0.9525778210116731,0.9416342412451354,0.9172873818788214,0.9186644910254811,0.9315175097276269,0.9377431906614786,0.9408560311284044,0.9392718176764867,0.9265369649805437,0.9342926363703117,0.9505280711506398,0.9480787937743186,0.9431474275832252,0.9337131739855479,0.9436164745613375,0.9502622229741171,0.9370357269189936,0.9221789883268483,0.9214494163424124,0.9198443579766539,0.9568336575875495,0.9936770428015554,0.9962305447470815,1,0.9966347670627814,0.9900434882124054,0.9883268482490273,0.9883268482490273,0.979483551467988,0.9766536964980544,0.9690661478599231,0.9688715953307393,0.9690819223893163,0.97609783212896,0.9705391884380212,0.9649805447470817,0.9649805447470817,0.9649805447470817,0.9611918902314156,0.9522461973823841,0.9494163424124513,0.9460328201657925,0.9524882244521814,0.9620982850554842,0.9625982688795361,0.9598127431906615,0.9573808365758756,0.9533073929961098,0.9494163424124513,0.954172070903589,0.9571984435797666,0.9537790354910975,0.9495215059417391,0.9393532805581638,0.951083935519733,0.9601739528496213,0.9617170829672402,0.9374602051644839,0.9261407852847531,0.9366314619232933,0.9350050439544602,0.927922920140819,0.9189646421925209,0.9282490272373551,0.9336232547493695,0.9517051956969551,0.9604999410446887,0.9688715953307393,0.9646099685010191,0.9596689518868511,0.95349268111914,0.9649805447470817,0.9649805447470817,0.9662127107652398,0.9688067444876785,0.9688715953307393,0.9688715953307393,0.9729700369353532,0.9741551284836752,0.9753402200319974,0.9765253115803194,0.9777104031286415,0.9788954946769639,0.9800805862252859,0.9812656777736081,0.9824507693219301,0.9836358608702522,0.9872460008646774,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9873047750542417,0.9851530420125874,0.9830013089709334,0.9808495759292795,0.9786978428876255,0.976838984621086,0.9805447470817121,0.9842505095423383,0.9879562720029644,0.9916620344635912,0.9953677969242175,0.9990735593848437,1,1,1,0.9971823426808,0.9924467841611356,0.9905671501002247,0.9844357976653697,0.9821011673151748,0.9778104953202225,0.9702056698165646,0.9758258133951482,0.969202748571902,0.9770632807700181,0.980544747081712,0.9844357976653697,0.9835202563515676,0.982017036491745,0.9844357976653697,0.9822005132875239,0.9790764261067472,0.9717014503006732,0.982368677042798,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9928165219994016,0.9958096378329843,0.9997952078640178,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9982833600366215,0.996865542585387,0.9983066724311861,0.9997478022769852,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9953307392996109,0.9883268482490273,0.9868180735329153,0.9771400778210123,0.9661478599221791,0.953307392996109,0.9494163424124513,0.9516566442636479,0.9568447117085249,0.964115866839602,0.9649805447470817,0.9617761501487755,0.9687664318014507,0.9786663088689121,0.9958731281688494,0.9961089494163424,0.9780872414499278,0.9701686121919582,0.9800583657587543,0.9844357976653697,0.9806559199555314,0.9810894941634238,0.9842023346303502,0.9844357976653697,0.9866245136186774,0.9846581434130067,0.9793287937743191,0.9775516312481293,0.9845633730943417,0.9947282540479474,0.9967856538656737,1,0.999080297134772,0.9962504421648393,0.9883268482490273,0.9883268482490273,0.9991746256337699,0.9961089494163424,0.9918641669614423,0.9851889042299484,0.9911626986744049,0.9940244580322399,0.9922178988326849,0.9904301188347885,0.9812522108241969,0.9857892065640312,0.9922178988326849,0.9856977600168261,0.9871357103152545,0.9854657816433968,0.9717386852344864,0.9831387808041505,0.991132024251199,0.9898554752640358,0.9766536964980557,0.9727626459143969,0.9727626459143969,0.988759187202769,0.9863539211925247,0.9819696388447414,0.9769220448141691,0.9706185976336065,0.972397859922179,0.9727626459143969,0.9811527237354081,0.9746525847693164,0.9711309150244761,0.9688715953307393,0.9683852140077815,0.9622339208056762,0.9649805447470817,0.9649805447470817,0.9685178634594978,0.9815004437162954,0.9853337324154444,0.9818916492068244,0.980544747081712,0.980544747081712,0.980544747081712,0.9808030026514237,0.9814916841706552,0.9821803656898866,0.982869047209118,0.9835577287283496,0.984246410247581,0.9849350917668124,0.9856237732860438,0.9863124548052752,0.9870011363245068,0.9876898178437382,0.9884985122453651,0.9907873655298696,0.9869119207640603,0.9883268482490273,0.9851066684556558,0.9868250392518257,0.9933296275708712,0.9914396887159529,0.989231743733599,0.991041534702742,0.9932860303654538,0.9964522774090181,1,1,1,0.9961089494163424,0.9934338521400775,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9883268482490273,0.9886047804335736,0.9911497672999164,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9876100757730905,0.9844357976653697,0.9903090815652293,1,1,1,1,0.9972679857604103,0.9925798570265132,0.9871504841190846,0.9766536964980544,0.9747321900369891,0.9728106835759237,0.9664564604857101,0.9610894941634242,0.9671931029221031,0.972397859922179,0.9689739913987301,0.9688715953307393,0.9688715953307393,0.9671096101607812,0.9635538261997413,0.9610894941634242,0.9577005146228189,0.952217898832685,0.960971583539678,0.9727626459143969,0.9702865228157057,0.9721730927956606,0.9688715953307393,0.9766536964980544,0.9697871366445406,0.9632398115912352,0.9663788910505838,0.9688107976653698,0.9712427042801557,0.9764105058365747,0.9783549405873215,0.9800998063199033,0.9818446720524856,0.9835895377850674,0.9853344035176492,0.9870792692502312,0.988824134982813,0.9905690007153948,0.9923138664479767,0.9940587321805585,0.9958035979131407,0.9967204002223459,0.9989438576987216,0.9970817120622566,0.9982852997427949,1,0.9968385214007783,0.9961089494163424,0.9934254662551995,0.9834453484258915,0.9811006114508066,0.9844357976653697,0.9869119207640609,0.9800480172199697,0.9658960860608838,0.9541585603112854,0.9494163424124513,0.9494163424124513,0.9416342412451362,0.9308949416342414,0.9020566981656468,0.8951953984097434,0.9185473411154338,0.9289234760051869,0.9142412451361915,0.905317769130998,0.9056755668858182,0.9244487678339819,0.9509727626459149,0.9583513474564062,0.9588810600483751,0.9500149655791676,0.9518482490272366,0.9737354085603102,0.980544747081712,0.9835711197578901,0.9871919584954607,0.9807068741893644,0.9728881636751597,0.9550367488110679,0.9455252918287937,0.9455252918287937,0.9262226291294736,0.9323262378881517,0.9798372833392289,0.9890799548136062,0.9949117030829093,0.9937507369413981,0.9961089494163424,0.9961089494163424,0.9961089494163424,0.9840034587116279,0.9658960860608814,0.9643701838712136,0.9613183794918746,0.9656290531776913,0.9652007928933265,0.9610894941634242,0.9610894941634242,0.9566726259333252,0.9600853520773213,0.9593871595330739,0.9569695582513167,0.9477140077821015,0.9416342412451362,0.937389458790237,0.9401280281159783,0.9730781365022625,0.9848804891606453,0.9826785490146852,0.9620936362495288,0.9538094640391613,0.9606799098914597,0.9629629629629637,0.9514339241965715,0.9490851891712886,0.9424621243480413,0.9648856410743099,0.9657949506831961,0.9604287497246898,0.9549391238860298,0.9596745666784577,0.9635856398208645,0.9649805447470817,0.9649805447470817,0.942265222420863,0.9445788200652013,0.9429312581063554,0.9573837317027961,0.9776264591439686,0.9804057809894383,0.9736273238218759,0.9765095835134748,0.9796014620917342,0.9782311494373752,0.9647295092255542,0.9492666866207721,0.9485971738685233,0.9578693143700518,0.9674982833600361,0.9773245672883416,0.9772432496167899,0.9690877648076086,0.9623446717710554,0.9610894941634242,0.9773611602405377,0.9827440365420406,0.9760550733313382,0.9700688416641728,0.9480430304417494,0.9601502750570244,0.975456450164621,0.9873314632159983,0.9867982212340194,0.982452124818799,0.9747081712062282,0.9768825818265036,0.9839099800189299,0.978514633733716,0.9766536964980544,0.9692253272019808,0.9618677042801556,0.9689931906614784,0.9727626459143969,0.9620110587753437,0.9341204883939319,0.9285461620091974,0.9430491687301042,0.9639505607690546,0.9564816711038299,0.9425734603515371,0.9440287339120021,0.9645598906299283,0.9953883844934415,1,1,1,0.9901227177491769,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.9883268482490273,0.982223239490348,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.980544747081712,0.9815453029460812,0.9844357976653697,0.9844357976653697,0.9922178988326849,0.9879731163777857,0.9905155642023337,0.9946179861085859,0.9975271828066475,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9925884750787466,0.9899431307991619,0.9879347268723797,0.9867281995596177,0.9855216722468556,0.9848249027237352,0.9870298313878089,0.9729915312428484,0.9662493655895782,0.9597223682826793,0.9759828257077702,0.9849310222851083,0.9916620344635912,0.9729915312428473,0.9622012229016125,0.9610894941634242,0.9554025740796163,0.9663612401154785,0.9688715953307393,0.9659846868331871,0.9649805447470817,0.9883268482490273,0.9887095745359444,0.9899853288256683,0.991261083115392,0.9922178988326849,0.9919429423674585,0.9916096618035478,0.9912763812396371,0.9909431006757263,0.9906098201118156,0.990276539547905,0.9899432589839943,0.9896099784200835,0.9892766978561728,0.9889434172922621,0.9886101367283514,0.9905155642023346,1,1,1,1,0.994265820192504,0.9998634719093452,0.9971329100962523,0.9961089494163424,0.9970817120622567,0.9981934408004446,0.9993051695386325,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.9989093267303385,0.9977302204928663,0.9965511142553944,0.9961089494163424,0.9961089494163424,0.9961089494163424,0.9961089494163424,0.9961089494163424,0.9967265764931134,0.9991970848001978,1,0.9909208819714657,0.9885626694965216,0.983684893166769,0.9809543313536759,0.984204972630746,0.982885972432896,0.9815669722350457,0.9755419677598666,0.9699638200559765,0.9715241410920297,0.9730844621280829,0.9746447831641359,0.9762051042001891,0.9777654252362423,0.9793257462722955,0.9808860673083489,0.9824463883444021,0.9840067093804552,0.9875972762645914,0.9954072845569941,1,0.99841719976258,0.9961089494163424,0.9961089494163424,0.997253376058595,1,0.9992018357777116,0.9929661777910809,0.9970105343076776,0.9989086077631203,0.9971851974501206,0.9873540856031099,0.9913925244664555,0.9937507369413981,0.9869649805447468,0.9872752129561471,0.9868492341033345,0.9848790819090776,0.9824254215304801,0.979671245930279,0.97624411222609,0.9711896680188784,0.9943703949002402,0.9922178988326849,0.9922178988326849,0.9922178988326849,0.9883268482490273,0.9869892996108953,0.9828793774319062,0.9796027032561946,0.9763707110010609,0.9735408560311285,0.9767219605433817,0.9792827847302554,0.9750762435587337,0.976448904362073,0.9685124214307094,0.9637234360969769,0.9609486180444047,0.9606355600021392,0.9603225019598738,0.9600094439176083,0.9596963858753429,0.9593833278330776,0.9590702697908121,0.9587572117485466,0.9584441537062811,0.9581310956640157,0.9578180376217502,0.9575049795794848,0.9571919215372194,0.956878863494954,0.9565658054526885,0.956252747410423,0.9559396893681575,0.9556266313258921,0.9553135732836266,0.9550005152413613,0.9546874571990959,0.9543743991568304,0.954061341114565,0.9537482830722994,0.953435225030034,0.9531221669877686,0.9528091089455032,0.9524960509032377,0.9521829928609722,0.9518699348187069,0.9515568767764413,0.951243818734176,0.9509307606919105,0.9506177026496451,0.9503046446073796,0.9499915865651142,0.9496785285228487,0.9493654704805832,0.9490524124383178,0.9487393543960524,0.948426296353787,0.9481132383115215,0.947800180269256,0.9474871222269906,0.947174064184725,0.9468610061424597,0.9465479481001943,0.9462348900579288,0.9459218320156634,0.9456087739733979,0.9452957159311325,0.944982657888867,0.9446695998466016,0.9443565418043361,0.9440434837620707,0.9437304257198053,0.9434173676775398,0.9431043096352744,0.942791251593009,0.9424781935507435,0.9421651355084781,0.9418520774662126,0.9415390194239471,0.9412259613816817,0.9409129033394162,0.9405998452971509,0.9402867872548853,0.93997372921262,0.9396606711703545,0.939347613128089,0.9390345550858236,0.9387214970435581,0.9384084390012928,0.9380953809590272,0.9377823229167619,0.9262344494985485,0.9130816024552012,0.8999287554118491,0.88289192920798,0.8577883770553564,0.8326848249027238,0.7686986597492498,0.7365820517571443,0.7018792946436008,0.6708678734562687,0.6361867704280212,0.5757730903133286,0.5289345144465589,0.4772320959091419,0.4498895782942457,0.4195259992925398,0.37707817474353567,0.3532259524024993,0.3333182517419255,0.28865830811355625,0.2623788815136964,0.24666481378543423,0.22298712960191558,0.19167653527321,0.15999084458686733,0.13252460517280795,0.11502918287937776],"mouseX":[0.8380090497737557,0.8387188359506699,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8389140271493213,0.8387428152134034,0.8343891402714931,0.8080971659919027,0.7687653522947638,0.7011506140917908,0.6236939531057181,0.5772195350288657,0.5647591163162098,0.56289592760181,0.5627768516313408,0.5619909502262443,0.5619909502262443,0.5626870866689871,0.5682561782109293,0.5747454751131221,0.5773755656108597,0.5773755656108597,0.5773755656108597,0.5773755656108597,0.5773755656108597,0.577567003132614,0.5782631395753568,0.579185520361991,0.5795531674208145,0.5806494543518765,0.5817359111476759,0.5828054298642534,0.5829917487356934,0.583710407239819,0.5842232277526396,0.5852583948559181,0.586395173453997,0.5887289181406828,0.591622495151907,0.5943365931980733,0.5961355020178549,0.5972850678733032,0.5980090497737557,0.5981900452488688,0.5981900452488688,0.5981900452488688,0.5981900452488688,0.5981900452488688,0.5981900452488688,0.5987490018631887,0.6005758946935417,0.6009049773755656,0.6010746606334841,0.6018099547511312,0.6023422943838168,0.6034279446044152,0.6071333510779877,0.6095776772247361,0.6137556561085974,0.6220675252349461,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6262443438914027,0.6190045248868783,0.6051066580478334,0.5972850678733032,0.5972850678733032,0.5972850678733032,0.5979920814479638,0.5622423328305681,0.5264705882352947,0.5103047895500737,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.5031674208144796,0.49433837324798696,0.46615384615384853,0.4263348416289569,0.4078780662062387,0.3899690402476773,0.3406780439626067,0.3378298918161566,0.33498173966970646,0.3321335875232564,0.32928543537680627,0.3264372832303557,0.3235891310839056,0.32074097893745546,0.3178928267910054,0.31504467464455527,0.2928607340372083,0.28544857292029235,0.28588365819700656,0.2863187434737208,0.2867538287504351,0.28718891402714936,0.28762399930386356,0.28805908458057783,0.28849416985729204,0.2889292551340063,0.2893643404107205,0.2937923556519379,0.3026336092749766,0.3114748628980138,0.32031611652105096,0.32915737014408813,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3375565610859729,0.3387030107901146,0.34140053950574284,0.3440980682213715,0.34679559693699974,0.34949312565262797,0.3521906543682562,0.3548881830838844,0.35758571179951265,0.3602832405151409,0.3629807692307691,0.37185520361989394,0.5010558069381615,0.5138009049773757,0.5154977375565614,0.5167420814479639,0.5176681048090077,0.5196047649829162,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5212669683257919,0.5246207080117116,0.5290693408340466,0.5325947885785615,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.5330316742081448,0.557785467128036,0.6430908458057752,0.7118459218006686,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.8036199095022625,0.7504524886878,0.5827816146701561,0.5422739963415804,0.5239819004524887,0.5239819004524887,0.5238502673796792,0.5231921020156313,0.5008523624118724,0.47391350099968654,0.45694653929947493,0.38202466506965993,0.2885908209437575,0.24803341454925165,0.23108400550855504,0.22858663827521977,0.22805429864253393,0.22805429864253393],"mouseY":[0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.402420780633755,0.43292727943890746,0.4769287559985233,0.5341789992952781,0.570524815111824,0.5816993464052287,0.5839793281653747,0.5832993336053311,0.5689452666196851,0.5125675358233497,0.46213476446034596,0.438282647584973,0.42369186046511625,0.4211886304909561,0.4211886304909561,0.4211886304909561,0.4211886304909561,0.4211886304909561,0.4211886304909561,0.4211886304909561,0.42078488372093026,0.41860465116279066,0.41860465116279066,0.41860465116279066,0.4185286517707858,0.4160206718346253,0.4160206718346253,0.4160206718346253,0.41418468652250784,0.41343669250646,0.4108527131782945,0.4108527131782945,0.4093523380845211,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.4082687338501292,0.40667274661802705,0.4035705896171013,0.40302694721299376,0.40051679586563305,0.3994528043775649,0.3979328165374677,0.3979328165374677,0.3979328165374677,0.3984352569623888,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.40051679586563305,0.37571059431524695,0.325581395348833,0.29715762273901813,0.29715762273901813,0.29715762273901813,0.2951388888888888,0.2945736434108527,0.2945736434108527,0.2900394910048272,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.28682170542635654,0.3057288712421985,0.33703703703703564,0.3611541774332486,0.3426628586971295,0.3230790153678763,0.2773580450950298,0.2823423707026584,0.28732669631028696,0.2923110219179155,0.29729534752554404,0.3022796731331735,0.30726399874080207,0.31224832434843064,0.3172326499560592,0.3222169755636878,0.32931380993396425,0.32987974557742006,0.32888590737427953,0.327892069171139,0.3268982309679983,0.32590439276485783,0.3249105545617173,0.3239167163585768,0.32292287815543624,0.32192903995229577,0.32093520174915524,0.31701973112325726,0.30987508781957307,0.3027304445158901,0.2955858012122072,0.2884411579085242,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.28165374677002586,0.2805977936791893,0.278113198171338,0.27562860266348627,0.27314400715563497,0.2706594116477837,0.2681748161399324,0.26569022063208114,0.26320562512422985,0.26072102961637855,0.25823643410852726,0.2572351421188595,0.2757967269595163,0.26485788113695047,0.26162790697674376,0.2630490956072351,0.2806922660897775,0.301587301587301,0.3158914728682168,0.3178294573643411,0.3178294573643411,0.3178294573643411,0.3178294573643411,0.3178294573643411,0.3178294573643411,0.3178294573643411,0.31326949384404895,0.2861233326349613,0.2618729394992406,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2506459948320413,0.2894056847545349,0.4539852911945862,0.6528854435831025,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.9844961240310077,0.8843669250646318,0.55922752617978,0.4382318984001308,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.39018087855297157,0.38621477074695076,0.3814073673457128,0.3771652789740627,0.33708263667224764,0.27519379844960845,0.2283840190816935,0.1994157959779758,0.19121447028423777,0.18817449460404306,0.18604651162790697]});

var project = new RenderProject({"duration":"67","fps":"25","frames":1675,"music":"music/Christmas.mp3","code":"// By @paulofalcao\n//\n// Merry Christmas! :)\n//\n//\n// Some GLSL compilers/drivers can't optimize the exit from the loop on break\n// and always run all iterations.\n//\n// Works very nice on my MacBook Pro with NVIDIA 320M on MacOSX 10.7 / Chrome\n// But runs very very slow on a Macbook Pro NVIDIA 320M on Win7 / Chrome\n\n// modified by @blurspline for slight audio reactive effects\n// and baking to video with renderflies\n// music by http://soundcloud.com/sxo/christmas\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform float audio;\nuniform vec2 mouse;\nuniform vec2 resolution;\n//Util Start\n\nfloat PI=3.14159265;\n\nvec2 ObjUnion(vec2 obj0,vec2 obj1){\n  if (obj0.x<obj1.x)\n    return obj0;\n  else\n    return obj1;\n}\n\nvec3 sim(vec3 p,float s){\n   vec3 ret=p;\n   ret=p+s/2.0;\n   ret=fract(ret/s)*s-s/2.0;\n   return ret;\n}\n\nvec2 rot(vec2 p,float r){\n   vec2 ret;\n   ret.x=p.x*cos(r)-p.y*sin(r);\n   ret.y=p.x*sin(r)+p.y*cos(r);\n   return ret;\n}\n\nvec2 rotsim(vec2 p,float s){\n   vec2 ret=p;\n   ret=rot(p,-PI/(s*2.0));\n   ret=rot(p,floor(atan(ret.x,ret.y)/PI*s)*(PI/s));\n   return ret;\n}\n\nfloat rnd(vec2 v){\n  return sin((sin(((v.y-1453.0)/(v.x+1229.0))*23232.124))*16283.223)*0.5+0.5; \n}\n\nfloat noise(vec2 v){\n  vec2 v1=floor(v);\n  vec2 v2=smoothstep(0.0,1.0,fract(v));\n  float n00=rnd(v1);\n  float n01=rnd(v1+vec2(0,1));\n  float n10=rnd(v1+vec2(1,0));\n  float n11=rnd(v1+vec2(1,1));\n  return mix(mix(n00,n01,v2.y),mix(n10,n11,v2.y),v2.x);\n}\n\n//Util End\n\n \n//Scene Start\n \n//Floor\nvec2 obj0(in vec3 p){\n  if (p.y<0.4)\n  p.y+=sin(p.x)*0.4*cos(p.z)*0.4;\n  return vec2(p.y,0);\n}\n\nvec3 obj0_c(vec3 p){\n  float f=\n    noise(p.xz)*0.5+\n    noise(p.xz*2.0+13.45)*0.25+\n    noise(p.xz*4.0+23.45)*0.15;\n  float pc=min(max(1.0/length(p.xz),0.0),1.0)*0.5;\n  return vec3(f)*0.3+pc+0.5;\n}\n\n//Snow\nfloat makeshowflake(vec3 p){\n  return length(p)-0.03;\n}\n\nfloat makeShow(vec3 p,float tx,float ty,float tz){\n  p.y=p.y+time*tx;\n  p.x=p.x+time*ty;\n  p.z=p.z+time*tz;\n  p=sim(p,4.0);\n  return makeshowflake(p);\n}\n\nvec2 obj1(vec3 p){\n  float f=makeShow(p,1.11, 1.03, 1.38);\n  f=min(f,makeShow(p,1.72, 0.74, 1.06));\n  f=min(f,makeShow(p,1.93, 0.75, 1.35));\n  f=min(f,makeShow(p,1.54, 0.94, 1.72));\n  f=min(f,makeShow(p,1.35, 1.33, 1.13));\n  f=min(f,makeShow(p,1.55, 0.23, 1.16));\n  f=min(f,makeShow(p,1.25, 0.41, 1.04));\n  f=min(f,makeShow(p,1.49, 0.29, 1.31));\n  f=min(f,makeShow(p,1.31, 1.31, 1.13));  \n  return vec2(f,1.0);\n}\n \nvec3 obj1_c(vec3 p){\n    return vec3(1,1,1);\n}\n\n\n//Star\nvec2 obj2(vec3 p){\n  p.y=p.y-4.3;\n  p=p*4.0;\n  float l=length(p);\n  if (l<2.0){\n  p.xy=rotsim(p.xy,2.5);\n  p.y=p.y-2.0; \n  p.z=abs(p.z);\n  p.x=abs(p.x);\n  return vec2(dot(p,normalize(vec3(2.0,1,3.0)))/4.0,2);\n  } else return vec2((l-1.9)/4.0,2.0);\n}\n\nvec3 obj2_c(vec3 p){\n  return vec3(1.0,0.5,0.2);\n}\n \n//Objects union\nvec2 inObj(vec3 p){\n  return ObjUnion(ObjUnion(obj0(p),obj1(p)),obj2(p));\n}\n \n//Scene End\n \nvoid main(void){\n  vec2 vPos=-1.0+2.0*gl_FragCoord.xy/resolution.xy;\n \n  //Camera animation\n  vec3 vuv=normalize(vec3(sin(time)*0.3,1,0));\n  vec3 vrp=vec3(0,cos(time*0.5)+2.5,0);\n  vec3 prp=vec3(sin(time*0.5)*(sin(time*0.39)*2.0+3.5),sin(time*0.5)+3.5,cos(time*0.5)*(cos(time*0.45)*2.0+3.5));\n  float vpd=1.5;  \n \n  //Camera setup\n  vec3 vpn=normalize(vrp-prp);\n  vec3 u=normalize(cross(vuv,vpn));\n  vec3 v=cross(vpn,u);\n  vec3 scrCoord=prp+vpn*vpd+vPos.x*u*resolution.x/resolution.y+vPos.y*v;\n  vec3 scp=normalize(scrCoord-prp);\n \n  //lights are 2d, no raymarching\n  mat4 cm=mat4(\n    u.x,   u.y,   u.z,   -dot(u,prp),\n    v.x,   v.y,   v.z,   -dot(v,prp),\n    vpn.x, vpn.y, vpn.z, -dot(vpn,prp),\n    0.0,   0.0,   0.0,   1.0);\n \n  vec4 pc=vec4(0,0,0,0);\n  const float maxl=80.0;\n  for(float i=0.0;i<maxl;i++){\n  vec4 pt=vec4(\n    sin(i*PI*2.0*7.0/maxl)*2.0*(1.0-i/maxl),\n    i/maxl*4.0,\n    cos(i*PI*2.0*7.0/maxl)*2.0*(1.0-i/maxl),\n    1.0);\n  pt=pt*cm;\n  vec2 xy=(pt/(-pt.z/vpd)).xy+vPos*vec2(resolution.x/resolution.y,1.0);\n  float c;\n  c=0.4/length(xy);\n  pc+=vec4(\n          (sin(i*5.0+time*10.0)*0.5+0.5)*c,\n          (cos(i*3.0+time*8.0)*0.5+0.5)*c,\n          (sin(i*6.0+time*9.0)*0.5+0.5)*c,0.0);\n  }\n  pc=pc/maxl;\n\n  pc=smoothstep(0.0,1.0,pc);\n  \n  //Raymarching\n  const vec3 e=vec3(0.1,0,0);\n  const float maxd=15.0; //Max depth\n \n  vec2 s=vec2(0.1,0.0);\n  vec3 c,p,n;\n \n  float f=1.0;\n  for(int i=0;i<64;i++){\n    if (abs(s.x)<.001||f>maxd) break;\n    f+=s.x;\n    p=prp+scp*f;\n    s=inObj(p);\n  }\n  \n  if (f<maxd){\n    if (s.y==0.0)\n      c=obj0_c(p);\n    else if (s.y==1.0)\n      c=obj1_c(p);\n    else\n      c=obj2_c(p);\n      if (s.y<=1.0){\n        gl_FragColor=vec4(c*max(1.0-f*.08,0.0)* audio,1.0)+pc;\n      } else{\n         //tetrahedron normal   \n         const float n_er=0.01;\n         float v1=inObj(vec3(p.x+n_er,p.y-n_er,p.z-n_er)).x;\n         float v2=inObj(vec3(p.x-n_er,p.y-n_er,p.z+n_er)).x;\n         float v3=inObj(vec3(p.x-n_er,p.y+n_er,p.z-n_er)).x;\n         float v4=inObj(vec3(p.x+n_er,p.y+n_er,p.z+n_er)).x;\n         n=normalize(vec3(v4+v1-v3-v2,v3+v4-v1-v2,v2+v4-v3-v1));\n  \n        float b=max(dot(n,normalize(prp-p)),0.0);\n        gl_FragColor=vec4((b*c+pow(b,8.0))*(1.0-f*.01)* audio,1.0)+pc;\n      }\n  }\n  else gl_FragColor=vec4(0,0,0,1.0) + pc ; //background color\n}","audiolevels":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mouseX":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mouseY":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]});



var k_UNALLOCATED = 1,
	k_ALLOCATED = 2,
	k_RENDERED = 3;

// Use a hashmap here to keep track of statuses of frames to render
var renders = [];

// First mark project render frames to unallocated
for (var i=0, il=project.frames;i<=il;i++) {
    //renders[i] = k_UNALLOCATED;
    
     var fname = path.join(__dirname, project.stills, project.name + i + '.png');
        
     if (path.existsSync(fname)) {
     	    renders[i] = k_RENDERED;
     } else {
     	    console.log(i, 'not rendered');
     	    renders[i] = k_UNALLOCATED;
     }
}

// Display stats of rendered frames
function checkRenderStatus() {
    var unalloc = 0,
	alloc = 0,
	rendered = 0,
	c= 0;
    for (var r in renders) {
        c++;
        switch(renders[r]) {
            case k_UNALLOCATED:
                unalloc ++;
                break;
            case k_ALLOCATED:
                alloc ++;
                break;
            case k_RENDERED:
                rendered ++;
                break;
        }
    }
    
    // console.log("Unallocated, Allocated, Rendered, Total", unalloc, alloc, rendered, c);
    return {unalloc:unalloc, alloc:alloc, rendered:rendered, c:c};
}

// Return the next unallocated frame to be rendered
function getNextRenderFrame() {
    for (var r in renders) {
        if (renders[r] && renders[r]==k_UNALLOCATED) {
			renders[r] = k_ALLOCATED;
			io.sockets.emit('renderstatus', r, k_ALLOCATED);
			
            return r;
        }
    }
    return null;
}

function saveRenderedFrame(frame, image) {
	var fid = frame;
	var img = image;
	
	var start = Date.now();
    // console.log("form parse " + fid, (now - uploadStartTime), (now - allStartTime));
	img = img.replace( /^data:image\/.*;base64/, '' );
	
    
	var buf = new Buffer(img, 'base64');
	var fname = path.join(__dirname, project.stills, project.name + fid + '.png');
	fs.writeFile(fname, buf, function(err) {
		if(err) {
				console.log(err);
				renders[fid] = k_UNALLOCATED;
				io.sockets.emit('renderstatus', fid, k_UNALLOCATED);
		} else {
				// console.log("The file "+fname+" was saved!");
                
                renders[fid] = k_RENDERED;
                io.sockets.emit('renderstatus', fid, k_RENDERED);

				 // console.log("file written " + fid, (Date.now() - start));
				 
                
                 // If all frames have rendered, start encoding
                 var status = checkRenderStatus();
                 if (status.rendered == project.frames) {
                     encode();
                     console.log('all are done!');
                 }
                 
                 
		}
	}); // eo write file
}



/* Here we spawn a new process, 
 * to encode the image files to a video with ffmpeg 
 * One might want to delete or keep the image files
 */
function encode() {
    console.log("we got an encode request!");
	var timestamp = new Date().getTime();
	var filename = path.join(__dirname, project.renders, "movie-"+timestamp + ".mp4");
	
	var stills_dir = path.join(__dirname, project.stills, project.name);
	var target = path.join(__dirname, project.renders, project.name + "-"+timestamp + ".mp4");
	var audio = path.join(__dirname, project.music);
	

	var args = "-qscale:v 2  -b:v 8Mb -i " + audio +  " -i "+stills_dir+"%d.png -r "+project.fps+" "+target;
	console.log(args);	
	
	var startTime = new Date();
	var ffmpeg  = spawn('ffmpeg.exe', args.split(' '));
	
	var stdout = "";
	var stderr = "";
	
	ffmpeg.stdout.on('data', function (data) {
		stdout+= data;
		//console.log('stdout: ' + data);
	});
	
	ffmpeg.stderr.on('data', function (data) {
		stderr += data;
		//console.log('stderr: ' + data);
	});
	
	ffmpeg.on('exit', function (code) {
	//console.log('child process exited with code ' + code);
	// Create a return json object
	var ret = {
		status: "ok", 
		filename: filename, 
		code:code, stdout:stdout, 
		stderr:stderr, 
		time: (new Date().getTime()-startTime.getTime())
	};

	console.log("Video Encoding eneded", ret);
	});
}


io.sockets.on('connection', function (socket) {

	socket.__isRendering = null;

	socket.emit('project', project);
	socket.on('ready', function () {
		// find available frame
		
		var frame = getNextRenderFrame();
		// console.log('client ready', socket, 'sending frame', frame);
		socket.__isRendering = frame;
		if (frame!=null)
		socket.emit('render', frame);
	});
	
	socket.on('render', function (frame, output) {
		// console.log('receiving render..', frame, output);
		saveRenderedFrame(frame, output);
		socket.__isRendering = null;
		var frame = getNextRenderFrame();
		socket.__isRendering = frame;
		
		if (frame!=null)
		socket.emit('render', frame);
	});
	
	
	socket.on('encode', function () {
		encode();
	});


	socket.on('disconnect', function () {
		//io.sockets.emit('user disconnected');
		if (socket.__isRendering!==null) {
			console.log('resetting frame status'); 
			renders[socket.__isRendering]==k_UNALLOCATED;
			io.sockets.emit('renderstatus', socket.__isRendering, k_UNALLOCATED);
		}
	});


});

// Project Settings
/*
function RenderProject(options) {
	
	if (options!==undefined) 
	for (var i in options) {
		this[i] = options[i];
	}
	
	
	if (!this.fps) this.fps = 25;
	if (!this.width) this.width = 1920; // 720 | 1920| 1280
	if (!this.height) this.height = 1080; // 480 | 1080 | 720

	
	// Project Directory
	if (!this.stills) this.stills = '_stills';
	if (!this.renders) this.renders = '_renders';
	if (!this.assets) this.assets = '_assets';
	this.audio = 'music/01TheBeginning.m4a';
	
	
	this.duration = 71;
	// Random Id / Key?
	this.frames = this.fps * this.duration;
	this.name = 'minefield';
	
	
};

function RenderProject(options) {
	
	if (options!==undefined) 
	for (var i in options) {
		this[i] = options[i];
	}
	
	
	if (!this.fps) this.fps = 25;
	if (!this.width) this.width = 1920; //1920; // 720 | 1920| 1280
	if (!this.height) this.height = 1080; //1080; // 480 | 1080 | 720

	
	// Project Directory
	if (!this.stills) this.stills = '_stills';
	if (!this.renders) this.renders = '_renders';
	if (!this.assets) this.assets = '_assets';
	this.audio = 'music/02TheBeach.m4a';
	
	
	this.duration = 124;
	// Random Id / Key?
	this.frames = this.fps * this.duration;
	this.name = 'chaininggears';
	this.code
	this.timeline ...
	//this.baked = ;
};


*/
function RenderProject(options) {
	
	if (options!==undefined) 
	for (var i in options) {
		this[i] = options[i];
	}
	
	
	if (!this.fps) this.fps = 25;
	if (!this.width) this.width = 1920; //1920; // 720 | 1920| 1280
	if (!this.height) this.height = 1080; //1080; // 480 | 1080 | 720

	
	// Project Directory
	if (!this.stills) this.stills = '_stills';
	if (!this.renders) this.renders = '_renders';
	if (!this.assets) this.assets = '_assets';
	
	
//	this.audio = 'music/02TheBeach.m4a';
//	this.duration = 67;
	this.frames = this.fps * this.duration;
	this.name = 'christmastree';
	
//	this.code = "// chains and gears - @P_Malin\n\n// ...fingers crossed, should now be compiling on more platforms\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform float audio;\n\n#define PI 3.141592654\n\nstruct C_Ray\n{\n\tvec3 vOrigin;\n\tvec3 vDir;\n};\n\nstruct C_HitInfo\n{\n\tfloat fDistance;\n\tfloat fObjectId;\n\tvec3 vPos;\n};\n\nstruct C_Material\n{\n\tvec3 cAlbedo;\n\tfloat fR0;\n\tfloat fSmoothness;\n};\n\nvec3 RotateY( const in vec3 vPos, const in float fAngle )\n{\n\tfloat s = sin(fAngle);\n\tfloat c = cos(fAngle);\n\t\n\tvec3 vResult = vec3( c * vPos.x + s * vPos.z, vPos.y, -s * vPos.x + c * vPos.z);\n\t\n\treturn vResult;\t\n}\n\t\nvec2 DistCombineUnion( const in vec2 v1, const in vec2 v2 )\n{\n\t//if(v1.x < v2.x) return v1; else return v2;\n\treturn mix(v1, v2, step(v2.x, v1.x));\n}\n\nvec2 DistCombineIntersect( const in vec2 v1, const in vec2 v2 )\n{\n\treturn mix(v2, v1, step(v2.x,v1.x));\n}\n\nvec2 DistCombineSubtract( const in vec2 v1, const in vec2 v2 )\n{\n\treturn DistCombineIntersect(v1, vec2(-v2.x, v2.y));\n}\n\nvec3 DomainRepeatXZGetTile( const in vec3 vPos, const in vec2 vRepeat, out vec2 vTile )\n{\n\tvec3 vResult = vPos;\n\tvec2 vTilePos = (vPos.xz / vRepeat) + 0.5;\n\tvTile = floor(vTilePos + 1000.0);\n\tvResult.xz = (fract(vTilePos) - 0.5) * vRepeat;\n\treturn vResult;\n}\n\nvec3 DomainRepeatXZ( const in vec3 vPos, const in vec2 vRepeat )\n{\n\tvec3 vResult = vPos;\n\tvec2 vTilePos = (vPos.xz / vRepeat) + 0.5;\n\tvResult.xz = (fract(vTilePos) - 0.5) * vRepeat;\n\treturn vResult;\n}\n\nvec3 DomainRepeatY( const in vec3 vPos, const in float fSize )\n{\n\tvec3 vResult = vPos;\n\tvResult.y = (fract(vPos.y / fSize + 0.5) - 0.5) * fSize;\n\treturn vResult;\n}\n\nvec3 DomainRotateSymmetry( const in vec3 vPos, const in float fSteps )\n{\n\tfloat angle = atan( vPos.x, vPos.z );\n\t\n\tfloat fScale = fSteps / (PI * 2.0);\n\tfloat steppedAngle = (floor(angle * fScale + 0.5)) / fScale;\n\t\n\tfloat s = sin(-steppedAngle);\n\tfloat c = cos(-steppedAngle);\n\t\n\tvec3 vResult = vec3( c * vPos.x + s * vPos.z, \n\t\t\t     vPos.y,\n\t\t\t     -s * vPos.x + c * vPos.z);\n\t\n\treturn vResult;\n}\n\nfloat GetDistanceXYTorus( const in vec3 p, const in float r1, const in float r2 )\n{\n   vec2 q = vec2(length(p.xy)-r1,p.z);\n   return length(q)-r2;\n}\n\nfloat GetDistanceYZTorus( const in vec3 p, const in float r1, const in float r2 )\n{\n   vec2 q = vec2(length(p.yz)-r1,p.x);\n   return length(q)-r2;\n}\n\nfloat GetDistanceCylinderY(const in vec3 vPos, const in float r)\n{\n\treturn length(vPos.xz) - r;\n}\n\nfloat GetDistanceChain( const in vec3 vPos )\n{\n\tfloat fOuterCylinder = length(vPos.xz) - 1.05;\n\tif(fOuterCylinder > 0.5)\n\t{\n\t\treturn fOuterCylinder;\n\t}\n\t\n\tvec3 vChainDomain = vPos;\n\t\n\tvChainDomain.y = fract(vChainDomain.y + 0.5) - 0.5;\t\t\n\tfloat fDistTorus1 = GetDistanceXYTorus(vChainDomain, 0.35, 0.1);\n\t\n\tvChainDomain.y = fract(vChainDomain.y + 1.0) - 0.5;\t\t\n\tfloat fDistTorus2 = GetDistanceYZTorus(vChainDomain, 0.35, 0.1);\n\t\n\tfloat fDist = min(fDistTorus1, fDistTorus2);\n\n\treturn fDist;\n}\n\nfloat GetDistanceGear( const in vec3 vPos )\n{\n\tfloat fOuterCylinder = length(vPos.xz) - 1.05;\n\tif(fOuterCylinder > 0.5)\n\t{\n\t\treturn fOuterCylinder;\n\t}\n\t\n\tvec3 vToothDomain = DomainRotateSymmetry(vPos, 16.0);\n\tvToothDomain.xz = abs(vToothDomain.xz);\n\tfloat fGearDist = dot(vToothDomain.xz,normalize(vec2(1.0, 0.55))) - 0.55;\n\tfloat fSlabDist = abs(vPos.y + 0.1) - 0.15;\n\t\n\tvec3 vHoleDomain = abs(vPos);\n\tvHoleDomain -= 0.35;\n\tfloat fHoleDist = length(vHoleDomain.xz) - 0.2;\n\t\n\tfloat fBarDist =vToothDomain.z - 0.1;\n\t\n\tfloat fResult = fGearDist;\n\tfResult = max(fResult, fSlabDist);\n\tfResult = max(fResult, fOuterCylinder);\n\tfResult = max(fResult, -fHoleDist);\n\tfResult = min(fResult, fBarDist);\n\treturn fResult;\n}\n\nvec2 GetDistanceScene( const in vec3 vPos )\n{             \t\n\tvec2 vChainTile;\n\tvec2 vRepeat = vec2(4.0, 8.0);\n\tvec3 vRepeatDomain = DomainRepeatXZGetTile(vPos, vRepeat, vChainTile);\n\t\t\n\tvec2 vDistFloor = vec2(vPos.y + 0.5, 1.0);\n\tvec2 vResult = vDistFloor;\n\t{\n\t\tvec3 vGearDomain1 = DomainRepeatXZ(vPos+vec3(0.0, 0.0, 4.0), vRepeat);\n\t\tvGearDomain1 = RotateY( vGearDomain1, time);\n\t\tvec2 vDistGear = vec2(GetDistanceGear(vGearDomain1), 3.0);\n\t\tvResult = DistCombineUnion( vResult, vDistGear );\n\t\t\n\t\tvec3 vGearDomain2 = DomainRepeatXZ(vPos+vec3(2.0, 0.0, 4.0), vRepeat);\n\t\tvGearDomain2 = RotateY( vGearDomain2, -time + (2.0 * PI / 32.0));\n\t\tvec2 vDistGear2 = vec2(GetDistanceGear(vGearDomain2), 3.0);\t\t\n\t\tvResult = DistCombineUnion( vResult, vDistGear2 );\n\t\t\n\t}\n\n\t{\n\t\tvec2 vDistChainHole = vec2( GetDistanceCylinderY(vRepeatDomain, 0.7), 2.0);\n\t\tvResult = DistCombineSubtract( vResult, vDistChainHole );\n\n\t\tvec3 vChainDomain = vRepeatDomain;\n\t\tfloat fSpeed = (sin(vChainTile.y + vChainTile.x) + 1.1) * 0.5;\n\t\tvChainDomain.y += sin(time * fSpeed);\n\t\tvec2 vDistChain = vec2( GetDistanceChain(vChainDomain), 4.0);\n\t\tvResult = DistCombineUnion( vResult, vDistChain );\n\t}\n\treturn vResult;\n}\n\nC_Material GetObjectMaterial( const in float fObjId, const in vec3 vPos )\n{\n\tC_Material mat;\n\n\tif(fObjId < 1.5)\n\t{\n\t\t// floor\n\t\tmat.fR0 = 0.02;\n\t\tmat.fSmoothness = 0.8;\n\t\tmat.cAlbedo = vec3(0.7, 0.8, 0.3);\n\t}\n\telse\n\tif(fObjId < 2.5)\n\t{\n\t\t// hole interior\n\t\tmat.fR0 = 0.0;\n\t\tmat.fSmoothness = 0.0;\n\t\tmat.cAlbedo = vec3(0.7, 0.8, 0.3);\n\t}\n\telse\n\tif(fObjId < 3.5)\n\t{\n\t\t// gear\n\t\tmat.fR0 = 0.4;\n\t\tmat.fSmoothness = 0.7;\n\t\tmat.cAlbedo = vec3(0.5, 0.6, 0.6);\n\t}\n\telse\n\t{\n\t\t// chain\n\t\tmat.fR0 = 0.2;\n\t\tmat.fSmoothness = 0.1;\n\t\tmat.cAlbedo = vec3(0.15, 0.125, 0.1);\n\t}\n\t\n\treturn mat;\n}\n\nvec3 GetSkyGradient( const in vec3 vDir )\n{\n\tfloat fBlend = vDir.y * 0.5 + 0.5;\n\treturn mix(vec3(0.0, 0.0, 0.0), vec3(0.7, 0.9, 1.0), fBlend);\n}\n\nvec3 GetLightPos()\n{\n\treturn vec3(sin(time), 1.5 + cos(time * 1.231), cos(time));\n}\n\nvec3 GetLightCol()\n{\n\treturn vec3(32.0, 6.0, 1.0);\n}\n\nvec3 GetAmbientLight(const in vec3 vNormal)\n{\n\treturn GetSkyGradient(vNormal);\n}\n\nvoid ApplyAtmosphere(inout vec3 col, const in C_Ray ray, const in C_HitInfo intersection)\n{\n\t// fog\n\tfloat fFogDensity = 0.035;\n\tfloat fFogAmount = exp(intersection.fDistance * -fFogDensity);\n\tvec3 cFog = GetSkyGradient(ray.vDir);\n\tcol = mix(cFog, col, fFogAmount);\n\t\n\t// glare from light (a bit hacky - use length of closest approach from ray to light)\n\t/*\n\tvec3 vToLight = GetLightPos() - ray.vOrigin;\n\tfloat fDot = dot(vToLight, ray.vDir);\n\tfDot = clamp(fDot, 0.0, intersection.fDistance);\n       \n\tvec3 vClosestPoint = ray.vOrigin + ray.vDir * fDot;\n\tfloat fDist = length(vClosestPoint - GetLightPos());\n\tcol += GetLightCol() * 0.01/ (fDist * fDist);\n\t*/\n}\n\nvec3 GetSceneNormal( const in vec3 vPos )\n{\n\t// tetrahedron normal  \n\tfloat fDelta = 0.01;\n\t\n\tvec3 vOffset1 = vec3( fDelta, -fDelta, -fDelta);\n\tvec3 vOffset2 = vec3(-fDelta, -fDelta,  fDelta);\n\tvec3 vOffset3 = vec3(-fDelta,  fDelta, -fDelta);\n\tvec3 vOffset4 = vec3( fDelta,  fDelta,  fDelta);\n\t\n\tfloat f1 = GetDistanceScene( vPos + vOffset1 ).x;\n\tfloat f2 = GetDistanceScene( vPos + vOffset2 ).x;\n\tfloat f3 = GetDistanceScene( vPos + vOffset3 ).x;\n\tfloat f4 = GetDistanceScene( vPos + vOffset4 ).x;\n\t\n\tvec3 vNormal = vOffset1 * f1 + vOffset2 * f2 + vOffset3 * f3 + vOffset4 * f4;\n\t\n\treturn normalize( vNormal );\n}\n\n// This is an excellent resource on ray marching -> http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm\nvoid Raymarch( const in C_Ray ray, out C_HitInfo result, const float fMaxDist, const int maxIter )\n{            \n\tconst float fEpsilon = 0.01;\n\tconst float fStartDistance = 0.1;\n\t\n\tresult.fDistance = fStartDistance; \n\tresult.fObjectId = 0.0;\n\t\t      \n\tfor(int i=0;i<=256;i++)                  \n\t{\n\t\tresult.vPos = ray.vOrigin + ray.vDir * result.fDistance;\n\t\tvec2 vSceneDist = GetDistanceScene( result.vPos );\n\t\tresult.fObjectId = vSceneDist.y;\n\t\t\n\t\t// abs allows backward stepping - should only be necessary for non uniform distance functions\n\t\tif((abs(vSceneDist.x) <= fEpsilon) || (result.fDistance >= fMaxDist) || (i > maxIter))\n\t\t{\n\t\t\tbreak;\n\t\t}                            \n\t\t\n\t\tresult.fDistance = result.fDistance + vSceneDist.x;                          \n\t}\n\t\n\t\n\tif(result.fDistance >= fMaxDist)\n\t{\n\t\tresult.fObjectId = 0.0;\n\t\tresult.fDistance = 1000.0;\n\t}\n}\n\nfloat GetShadow( const in vec3 vPos, const in vec3 vLightDir, const in float fLightDistance )\n{\n\tC_Ray shadowRay;\n\tshadowRay.vDir = vLightDir;\n\tshadowRay.vOrigin = vPos;\n\t\n\tC_HitInfo shadowIntersect;\n\tRaymarch(shadowRay, shadowIntersect, fLightDistance, 32);\n\t\t\t\t       \n\treturn step(0.0, shadowIntersect.fDistance) * step(fLightDistance, shadowIntersect.fDistance );             \n}\n\n// http://en.wikipedia.org/wiki/Schlick's_approximation\nfloat Schlick( const in vec3 vNormal, const in vec3 vView, const in float fR0, const in float fSmoothFactor)\n{\n\tfloat fDot = dot(vNormal, -vView);\n\tfDot = min(max((1.0 - fDot), 0.0), 1.0);\n\tfloat fDot2 = fDot * fDot;\n\tfloat fDot5 = fDot2 * fDot2 * fDot;\n\treturn fR0 + (1.0 - fR0) * fDot5 * fSmoothFactor;\n}\n\nfloat GetDiffuseIntensity(const in vec3 vLightDir, const in vec3 vNormal)\n{\n\treturn max(0.0, dot(vLightDir, vNormal));\n}\n\nfloat GetBlinnPhongIntensity(const in C_Ray ray, const in C_Material mat, const in vec3 vLightDir, const in vec3 vNormal)\n{             \n\tvec3 vHalf = normalize(vLightDir - ray.vDir);\n\tfloat fNdotH = max(0.0, dot(vHalf, vNormal));\n\n\tfloat fSpecPower = exp2(4.0 + 6.0 * mat.fSmoothness);\n\tfloat fSpecIntensity = (fSpecPower + 2.0) * 0.125;\n\t\n\treturn pow(fNdotH, fSpecPower) * fSpecIntensity;\n}\n\n// use distance field to evaluate ambient occlusion\nfloat GetAmbientOcclusion(const in C_Ray ray, const in C_HitInfo intersection, const in vec3 vNormal)\n{\n\tvec3 vPos = intersection.vPos;\n\n\tfloat fAmbientOcclusion = 1.0;\n\n\tfloat fDist = 0.0;\n\tfor(int i=0; i<=5; i++)\n\t{\n\t\tfDist += 0.1;\n\n\t\tvec2 vSceneDist = GetDistanceScene(vPos + vNormal * fDist);\n\t\t\n\t\tfAmbientOcclusion *= 1.0 - max(0.0, (fDist - vSceneDist.x) * 0.2 / fDist );\t\t       \n\t}\n\n\treturn fAmbientOcclusion;\n}\n\nvec3 GetObjectLighting(const in C_Ray ray, const in C_HitInfo intersection, const in C_Material material, const in vec3 vNormal, const in vec3 cReflection)\n{\n\tvec3 cScene ;\n\t\n\tvec3 vLightPos = GetLightPos();\n\tvec3 vToLight = vLightPos - intersection.vPos;\n\tvec3 vLightDir = normalize(vToLight);\n\tfloat fLightDistance = length(vToLight);\n\t\n\tfloat fAttenuation = 1.0 / (fLightDistance * fLightDistance) + audio * 0.4;\n\n\tfloat fShadowBias = 0.1;\t\n\tfloat fShadowFactor = GetShadow( intersection.vPos + vLightDir * fShadowBias, vLightDir, fLightDistance - fShadowBias );\n\tvec3 vIncidentLight = GetLightCol() * fShadowFactor * fAttenuation;\n\t\n\tvec3 vDiffuseLight = GetDiffuseIntensity( vLightDir, vNormal ) * vIncidentLight;\n\t\n\tfloat fAmbientOcclusion = GetAmbientOcclusion(ray, intersection, vNormal);\n\tvec3 vAmbientLight = GetAmbientLight(vNormal) * fAmbientOcclusion;\n\t\n\tvec3 vDiffuseReflection = material.cAlbedo * (vDiffuseLight + vAmbientLight);\n\t\n\tvec3 vSpecularReflection = cReflection * fAmbientOcclusion;\n\t\t       \n\tvSpecularReflection += GetBlinnPhongIntensity( ray, material, vLightDir, vNormal ) * vIncidentLight;\n\t\t       \n\tfloat fFresnel = Schlick(vNormal, ray.vDir, material.fR0, material.fSmoothness * 0.9 + 0.1);\n\tcScene = mix(vDiffuseReflection , vSpecularReflection, fFresnel);\n\t\n\treturn cScene;\n}\n\nvec3 GetSceneColourSimple( const in C_Ray ray )\n{\n\tC_HitInfo intersection;\n\tRaymarch(ray, intersection, 16.0, 32);\n\t\t       \n\tvec3 cScene;\n\t\n\tif(intersection.fObjectId < 0.5)\n\t{\n\t\tcScene = GetSkyGradient(ray.vDir);\n\t}\n\telse\n\t{\n\t\tC_Material material = GetObjectMaterial(intersection.fObjectId, intersection.vPos);\n\t\tvec3 vNormal = GetSceneNormal(intersection.vPos);\n\t\t\n\t\t// use sky gradient instead of reflection\n\t\tvec3 cReflection = GetSkyGradient(reflect(ray.vDir, vNormal));\n\t\t\n\t\t// apply lighting\n\t\tcScene = GetObjectLighting(ray, intersection, material, vNormal, cReflection );\n\t}\n\t\n\tApplyAtmosphere(cScene, ray, intersection);\n\t\n\treturn cScene;\n}\n\n\nvec3 GetSceneColour( const in C_Ray ray )\n{                                                             \n\tC_HitInfo intersection;\n\tRaymarch(ray, intersection, 30.0, 256);\n\t\t       \n\tvec3 cScene;\n\t\n\tif(intersection.fObjectId < 0.5)\n\t{\n\t\tcScene = GetSkyGradient(ray.vDir);\n\t}\n\telse\n\t{\n\t\tC_Material material = GetObjectMaterial(intersection.fObjectId, intersection.vPos);\n\t\tvec3 vNormal = GetSceneNormal(intersection.vPos);\n\t\t\n\t\tvec3 cReflection;\n\t\t//if((material.fSmoothness + material.fR0) < 0.01)\n\t\t//{\n\t\t//\t// use sky gradient instead of reflection\n\t\t//\tvec3 cReflection = GetSkyGradient(reflect(ray.vDir, vNormal));\t\t\t\n\t\t//}\n\t\t//else\n\t\t{\n\t\t\t// get colour from reflected ray\n\t\t\tfloat fSepration = 0.05;\n\t\t\tC_Ray reflectRay;\n\t\t\treflectRay.vDir = reflect(ray.vDir, vNormal);\n\t\t\treflectRay.vOrigin = intersection.vPos + reflectRay.vDir * fSepration;\n\t\t\t\t\t\n\t\t\tcReflection = GetSceneColourSimple(reflectRay);                                                 \t\t\n\t\t}\n\t\t\n\t\t// apply lighting\n\t\tcScene = GetObjectLighting(ray, intersection, material, vNormal, cReflection );\n\t}\n\t\n\tApplyAtmosphere(cScene, ray, intersection);\n\t\n\treturn cScene;\n}\n\nvoid GetCameraRay( const in vec3 vPos, const in vec3 vForwards, const in vec3 vWorldUp, out C_Ray ray)\n{\n\tvec2 vUV = ( gl_FragCoord.xy / resolution.xy );\n\tvec2 vViewCoord = vUV * 2.0 - 1.0;\n\t\n\tfloat fRatio = resolution.x / resolution.y;\n\t\n\tvViewCoord.y /= fRatio;                              \n\t\n\tray.vOrigin = vPos;\n\t\n\tvec3 vRight = normalize(cross(vForwards, vWorldUp));\n\tvec3 vUp = cross(vRight, vForwards);\n\t       \n\tray.vDir = normalize( vRight * vViewCoord.x + vUp * vViewCoord.y + vForwards);           \n}\n\nvoid GetCameraRayLookat( const in vec3 vPos, const in vec3 vInterest, out C_Ray ray)\n{\n\tvec3 vForwards = normalize(vInterest - vPos);\n\tvec3 vUp = vec3(0.0, 1.0, 0.0);\n\t\n\tGetCameraRay(vPos, vForwards, vUp, ray);\n}\n\nvec3 OrbitPoint( const in float fHeading, const in float fElevation )\n{\n\treturn vec3(sin(fHeading) * cos(fElevation), sin(fElevation), cos(fHeading) * cos(fElevation));\n}\n\nvec3 Tonemap( const in vec3 cCol )\n{\n\t// simple Reinhard tonemapping operator\n\t\n\treturn cCol / (1.0 + cCol);\n}\n\nvoid main( void )\n{\n\tC_Ray ray;\n\t\n\tGetCameraRayLookat( OrbitPoint(-mouse.x * 5.0, mouse.y) * 8.0, vec3(0.0, 0.0, 0.0), ray);\n\t//if (time>60.0) {\n\t//\tGetCameraRayLookat( OrbitPoint(-mouse.x * 5.0, (sin(time)+0.54) * 0.45) * 8.0, vec3(0.0, 0.0, 0.0), ray);\n\t//}\n\t//GetCameraRayLookat(vec3(0.0, 0.0, -5.0), vec3(0.0, 0.0, 0.0), ray);\n\t\n\tvec3 cScene = GetSceneColour( ray );\n\t\n\tfloat fExposure = 1.5;\n\tgl_FragColor = vec4( Tonemap(cScene * fExposure), 1.0 );\n}";
	//this.baked = ;
};




